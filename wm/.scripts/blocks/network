#!/bin/sh

# The script depends on the following packages and scripts:
#    - net-tools (for 'route' command)
#    - iproute2 (for 'ip' command)
#    - sipcalc (for 'sipcalc' command)
#    - coreutils (for 'wc' and 'echo' command)
#    - grep (for 'grep' and 'egrep' command)
#    - gawk (for 'awk' command)
#    - sed (for 'sed' command)
#    - wireless_tools (for 'iwconfig' command)

# Set default instance with parameter expansion
defaultInterface=$(route | grep default | awk '{print $8;}')
BLOCK_INSTANCE=${BLOCK_INSTANCE:-$defaultInterface}

function getDefaultIpAddr {
	interface=$1

	# test for connectivity
	if [ $(ip -6 addr show dev $interface | wc -l) -gt 0 ]
	then

		# get one active address, for calculating the prefix, for getting the default address
		activeAddress=$(ip -6 addr show dev $interface | grep 'inet6' | grep -v "deprecated" -m 1 | awk '{print $2;}')

		prefix=$(sipcalc $activeAddress | grep 'Subnet prefix' | awk -F "-" '{print $2;}')

		prefixLength=$(sipcalc $activeAddress | grep 'Prefix length' | awk -F "-" '{print $2;}' | sed -e 's/^[[:space:]]*//')


		defaultAddress="$(ip route get $prefix | awk '{print $9;}')/$prefixLength"

		echo $defaultAddress
	else
		echo "None"
	fi
}

function getDefaultIp4Addr {
	interface=$1

	# test for connectivity
	if [ $(ip -4 addr show dev $interface | wc -l) -gt 0 ]
	then

		defaultAddr=$(ip -4 addr show dev $interface | grep 'inet' -m 1 | awk '{print $2;}')

		echo $defaultAddr
	else
		echo "None"
	fi
}

function interfaceState {
	interface=$1

	echo $(ip link show $interface | grep "state" -m 1 | egrep -o "state [A-Z]+" | sed 's/state //')
}

function getWifiSSID {
	interface=$1
	
	echo "$(iwconfig $interface | grep "ESSID" -m 1 | egrep -o 'ESSID:"[\.0-9a-zA-Z \-]+"' | sed -e 's/ESSID://' -e 's/"//g')"
}

function getWifiSignalStrength {
	strengthFraction=$(iwconfig 2>/dev/null| grep "Link Quality" -m 1 | egrep -o 'Link Quality=[0-9]{2,3}/[0-9]{2,3}' | sed 's/Link Quality=//')

	strengthPercent=$(echo "scale=2; $strengthFraction * 100" | bc | awk -F '.' '{print $1;}')

	echo $strengthPercent
}


if [ "$(interfaceState $BLOCK_INSTANCE)" == "UP" ]
then
	ipAddr=$(getDefaultIpAddr $BLOCK_INSTANCE)
	ip4Addr=$(getDefaultIp4Addr $BLOCK_INSTANCE)

	# use different outputs for ethernet (enp*) and wifi (wlp*) interfaces
	if [ "$(echo $BLOCK_INSTANCE | awk '/enp/ {print 1;}')" == "1" ]
	then
		echo " $ipAddr ($ip4Addr)"
		echo ""
		echo
	else
		ssid=$(getWifiSSID $BLOCK_INSTANCE)
		signal="$(getWifiSignalStrength $BLOCK_INSTANCE)%"

		echo " [$ssid, $signal]  $ipAddr  ($ip4Addr)"
		echo ""
		echo
	fi
else
	echo "  down"
	echo ""
	echo "#ee829f"	
fi
